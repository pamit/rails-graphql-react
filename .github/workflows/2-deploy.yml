name: Build and Push to ECR

on:
  workflow_dispatch:
  # push:
  #   branches: [main]
  # workflow_run:
  #   workflows: [Prerelease]

env:
  AWS_REGION: ${{ secrets.AWS_REGION }}
  ECR_REGISTRY: public.ecr.aws/y6a1b9z5

jobs:
  build-and-push:
    name: Build & Push Rails and React Images
    runs-on: ubuntu-latest
    if: |
        (github.event_name != 'workflow_run') ||
        (github.event_name == 'workflow_run' && github.event.workflow_run.conclusion == 'success')

    steps:
      - name: Checkout source code
        uses: actions/checkout@v4

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v2

      - name: Build Rails API Docker image
        run: |
          echo "ðŸš€ Build and Push Rails API"
          docker build -f Dockerfile.api -t my-blog-api .

      - name: Tag and push Rails API image to ECR
        run: |
          docker tag my-blog-api:latest $ECR_REGISTRY/my-blog-api:latest
          docker push $ECR_REGISTRY/my-blog-api:latest

      - name: Build React App Docker image
        run: |
          echo "ðŸš€ Build and Push React App"
          docker build -f Dockerfile.app -t my-blog-app .

      - name: Tag and push React App image to ECR
        run: |
          docker tag my-blog-app:latest $ECR_REGISTRY/my-blog-app:latest
          docker push $ECR_REGISTRY/my-blog-app:latest
  deploy:
    name: Deploy to AWS ECS
    runs-on: ubuntu-latest
    needs: build-and-push
    defaults:
      run:
        working-directory: infra

    steps:
      - name: Checkout source code
        uses: actions/checkout@v4

      - name: Set up Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: 1.12.2

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}

      - name: Terraform Init
        run: |
          echo "ðŸš€ Terraform init"
          terraform init

      - name: Terraform plan
        run: |
          echo "ðŸš€ Terraform plan"
          terraform plan -out=tfplan
